- crm_title = I18n.t "crm_kinds.#{current_user.company.crm_kind}"

#invitation-modal.modal.fade{role: "dialog", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{type: "button", data: {dismiss: 'modal'}}
          %span Ã—
        .td-dialog
          %h1 Add with no #{crm_title}?
      .modal-body
        %h4
          WARNING! You have not entered a valid #{crm_title} in this invitation! 
        %p
          Without a valid #{crm_title} accounts on the Testdrive system expire in #{ENV['TEST_USER_VALIDITY'].to_i*24}hrs. 
        %p
          If you wish to add the ID later you may do so via the portal dashboard, for a guide on how to complete these steps click here.
      .modal-footer
        %button.btn.btn-default.pull-left{type: "button", data: {dismiss: 'modal'}} Cancel
        %button.btn.btn-success{type: "submit", onclick: "$(this).closest('form').data('force', true)"} Submit


= f.fields_for :to_user do |uf|
  = uf.text_field :first_name
  = uf.text_field :last_name
  = uf.email_field :email
  .form-group{class: ('has-error' if f.object.errors[:crm_id].any?)}
    %label.control-label= "#{crm_title} ID"
    .input-group
      %span.input-group-addon.icon-info{"data-container" => "body", "data-original-title" => "Enter the #{crm_title} ID (if any) associated with this Customer.", "data-placement" => "top", "data-toggle" => "tooltip"}
      = f.hidden_field :crm_kind, value: current_user.company.crm_kind
      %input#salesforce.form-control.input-md{name: "invitation[crm_id]", type: "text", value: f.object.crm_id}
    - if f.object.errors[:crm_id].any?
      %span.help-block
        = f.object.errors[:crm_id].join(', ')
  = uf.text_field :company_name, label_class: "required"
  = uf.select :company_type, I18n.t('company_types').invert, include_blank: '', label: 'Company industry segment'
  = f.text_field :potential_seats
  = uf.text_field :job_title
  = uf.text_field :integrations_username
  - if writable?(f.object, :to_user_attributes, :integrations_expiration_date)
    = uf.text_field :integrations_expiration_date, 'data-provide' => 'datepicker', value: bl(uf.object.integrations_expiration_date)
  - if writable?(f.object, :to_user_attributes, :role)
    = uf.select :role, I18n.t('roles').invert
  - if writable?(f.object, :to_user_attributes, :can_edit_services)
    = uf.check_box :can_edit_services
  - if writable?(f.object, :to_user_attributes, :profile_id)
    = uf.select :profile_id, Profile.all.collect{|p| [ p.name, p.id ] }, prompt: ''
  = uf.select :home_region, permitted_regions, prompt: 'Select a Region'
  = uf.fields_for :user_integrations do |uif|
    %fieldset
      %legend{style: 'margin-bottom: 15px'}= uif.object.integration.name
      = uif.hidden_field :integration_id
      - uif.object.integration.enabled_services.select{|x| current_user.root? || x != 'horizon_view'}.each do |s|
        .col-lg-3
          = uif.check_box :"prohibit_#{s}", label: "No #{s.camelize}"
.help-block{style: 'margin-top: 20px'}
  A <i class="days" data-min="#{ENV['TEST_USER_VALIDITY']}" data-max="30"></i>-day account will be setup for the user. After the <i class="days"></i>-day trial ends, the user's
  %strong account will automatically be deleted from the system.